{"version":3,"sources":["sort-objects-array.test.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;AAEA,mBAAK,6CAAL,EAAoD,aAAK;AAAA;AAAA;;AACrD,QAAM,WAAW,CACb,EAAC,MAAM,MAAP,EAAe,SAAS,SAAxB,EADa,EAEb,EAAC,MAAK,KAAN,EAAa,SAAQ,KAArB,EAFa,EAGb,EAAC,MAAM,MAAP,EAAe,SAAS,KAAxB,EAHa,CAAjB;AAKA,QAAM,WAAW,CACb,EAAC,MAAM,MAAP,EAAe,SAAS,KAAxB,EADa,EAEb,EAAC,MAAM,MAAP,EAAe,SAAS,SAAxB,EAFa,EAGb,EAAC,MAAK,KAAN,EAAa,SAAQ,KAArB,EAHa,CAAjB;AAKA,QAAM,SAAS,SAAS,KAAT,CAAe,CAAf,EAAkB,IAAlB,CAAuB,2BAAiB,SAAjB,CAAvB,CAAf;AACA,MAAE,IAAF,uBAAO,MAAP;AAAA;AAAA;AAAA;AAAA,gCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AACH,CAbD;;AAeA,mBAAK,8CAAL,EAAqD,aAAK;AAAA;AAAA;;AACtD,QAAM,WAAW,CACb,EAAC,MAAM,MAAP,EAAe,SAAS,SAAxB,EADa,EAEb,EAAC,MAAK,KAAN,EAAa,SAAQ,KAArB,EAFa,EAGb,EAAC,MAAM,MAAP,EAAe,SAAS,KAAxB,EAHa,CAAjB;AAKA,QAAM,WAAW,CACb,EAAC,MAAK,KAAN,EAAa,SAAQ,KAArB,EADa,EAEb,EAAC,MAAM,MAAP,EAAe,SAAS,SAAxB,EAFa,EAGb,EAAC,MAAM,MAAP,EAAe,SAAS,KAAxB,EAHa,CAAjB;AAKA,QAAM,SAAS,SAAS,KAAT,CAAe,CAAf,EAAkB,IAAlB,CAAuB,2BAAiB,UAAjB,CAAvB,CAAf;AACA,MAAE,IAAF,yBAAO,MAAP;AAAA;AAAA;AAAA;AAAA,gCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AACH,CAbD;;AAeA,mBAAK,2DAAL,EAAkE,aAAK;AAAA;AAAA;;AACnE,QAAM,WAAW,CACb,EAAC,MAAM,MAAP,EAAe,SAAS,SAAxB,EADa,EAEb,EAAC,MAAK,KAAN,EAAa,SAAQ,KAArB,EAFa,EAGb,EAAC,MAAM,MAAP,EAAe,SAAS,KAAxB,EAHa,CAAjB;AAKA,QAAM,SAAS,SAAS,KAAT,CAAe,CAAf,EAAkB,IAAlB,CAAuB,2BAAiB,QAAjB,CAAvB,CAAf;AACA,MAAE,IAAF,yBAAO,MAAP;AAAA;AAAA;AAAA;AAAA,gCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AACH,CARD","file":"sort-objects-array.test.js","sourcesContent":["import test from 'ava'\nimport {sortObjectsArray} from '../src'\n\ntest('sort an array of objects by ascending order', t => {\n    const original = [\n        {Name: \"Name\", Surname: \"Surname\"},\n        {Name:\"AAA\", Surname:\"ZZZ\"},\n        {Name: \"Name\", Surname: \"AAA\"}\n    ]\n    const expected = [\n        {Name: \"Name\", Surname: \"AAA\"},\n        {Name: \"Name\", Surname: \"Surname\"},\n        {Name:\"AAA\", Surname:\"ZZZ\"}\n    ]\n    const actual = original.slice(0).sort(sortObjectsArray('Surname'))\n    t.same(actual, expected)\n})\n\ntest('sort an array of objects by descending order', t => {\n    const original = [\n        {Name: \"Name\", Surname: \"Surname\"},\n        {Name:\"AAA\", Surname:\"ZZZ\"},\n        {Name: \"Name\", Surname: \"AAA\"}\n    ]\n    const expected = [\n        {Name:\"AAA\", Surname:\"ZZZ\"},\n        {Name: \"Name\", Surname: \"Surname\"},\n        {Name: \"Name\", Surname: \"AAA\"}\n    ]\n    const actual = original.slice(0).sort(sortObjectsArray('-Surname'))\n    t.same(actual, expected)\n})\n\ntest('will not sort the an array if the property doesn\\'t exist', t => {\n    const original = [\n        {Name: \"Name\", Surname: \"Surname\"},\n        {Name:\"AAA\", Surname:\"ZZZ\"},\n        {Name: \"Name\", Surname: \"AAA\"}\n    ]\n    const actual = original.slice(0).sort(sortObjectsArray('Middle'))\n    t.same(actual, original)\n})\n\n"]}