'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _stripJsonComments = require('strip-json-comments');

var _stripJsonComments2 = _interopRequireDefault(_stripJsonComments);

var _configLoader = require('../configLoader');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = getContent;

/**
 * Get content of the configuration file
 * @param {String} config - partial path to configuration file
 * @param {String} directory - directory path which will be joined with config argument
 * @return {Object}
 */

function getContent(config, directory) {
    if (!config) {
        return;
    }

    var configPath = _path2.default.resolve(directory, config);
    var ext;
    var content;

    config = _path2.default.basename(config);

    if (_fs2.default.existsSync(configPath)) {
        ext = _path2.default.extname(configPath);

        if (ext === '.js' || ext === '.json') {
            content = JSON.parse(_fs2.default.readFileSync(configPath, 'utf8'));
        } else {
            content = JSON.parse((0, _stripJsonComments2.default)(_fs2.default.readFileSync(configPath, 'utf8')));
        }

        // Adding property via Object.defineProperty makes it
        // non-enumerable and avoids warning for unsupported rules
        Object.defineProperty(content, 'configPath', {
            value: configPath
        });
    }
    return (0, _configLoader.getNormalizedConfig)(config, content);
};